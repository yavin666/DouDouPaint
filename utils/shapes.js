/**
 * 抖动像素形状定义文件
 * 每个形状包含多个帧，每帧由多个坐标点组成
 */

/**
 * 加号形状的像素动画帧数据
 * 每个数组代表一帧，每帧包含多个[dx,dy]坐标偏移
 */
export const PLUS_PIXEL = [
  [
    // 第0帧
    [0, 0],
    [0, -1],
    [0, 1],
    [-1, 0],
    [1, 0],
    [1, 1],
    [-1, 1],
    [0, 2],
  ],
  [
    // 第1帧
    [0, 1],
    [0, 2],
    [0, 3],
    [0, 4],
    [-1, 2],
    [1, 2],
    [-1, 3],
    [1, 3],
  ],
  [
    // 第2帧
    [0, 1],
    [0, 2],
    [0, 3],
    [-1, 2],
    [1, 2],
  ],
];

/**
 * 对角线形状的像素动画帧数据
 */
export const DIAG_PIXEL = [
  [
    // 第0帧
    [-1, 0],
    [-1, 1],
    [-1, 2],
    [-2, 1],
    [0, 1],
    [0, 2],
    [0, 3],
    [1, 2]
  ],
  [
    // 第1帧
    [0, 1],
    [0, 2],
    [0, 3],
    [-1, 2],
    [1, 2],
    [1, 3],
    [1, 4],
    [2, 3]
  ],
  [
    // 第2帧
    [0, 1],
    [0, 2],
    [0, 3],
    [1, 2],
    [-1, 2],
    [-1, 3],
    [-1, 4],
    [-2, 3]
  ]
];

/**
 * 反对角线形状的像素动画帧数据
 */
export const REVERSE_DIAG_PIXEL = [
  [
    // 第0帧
    [2, 1],
    [1, 0],
    [1, 1],
    [1, 2],
    [0, 1],
    [0, 2],
    [0, 3],
    [-1, 2]
  ],
  [
    // 第1帧
    [1, 2],
    [0, 1],
    [0, 2],
    [0, 3],
    [-1, 2],
    [-1, 3],
    [-1, 4],
    [-2, 3]
  ],
  [
    // 第2帧
    [2, 2],
    [1, 1],
    [1, 2],
    [1, 3],
    [0, 1],
    [0, 2],
    [0, 3],
    [-1, 2]
  ]
];

/**
 * 随机获取一个形状
 * @returns {Array} 随机选择的形状数据
 */
export function getRandomShape() {
  const shapes = [PLUS_PIXEL, DIAG_PIXEL, REVERSE_DIAG_PIXEL];
  return shapes[Math.floor(Math.random() * shapes.length)];
}